name: Go Unit Tests

on:
  push:
    branches:
      - main
      - 'feat/**'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies (if any, e.g., for linters or specific tools)
:
      run: go install golang.org/x/lint/golint@latest
      run: echo "No specific dependencies to install for tests beyond go modules."

    - name: Vet
      run: go vet ./...

    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage reports to Codecov (Optional)

      run: echo "Skipping coverage upload for this example."

    - name: Check test summary (Optional, for a quick pass/fail summary)
      run: |
        if grep -q "FAIL" coverage.out; then
          echo "Some tests failed."
          # exit 1 # Optionally fail the workflow here based on coverage.out content
        else
          echo "All tests passed."
        fi