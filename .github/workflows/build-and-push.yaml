name: Build and Push

on:
  push:
    branches:
      - main
      - 'feat/**'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: medisynth-io/medisynth

permissions:
  contents: read
  packages: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.services || '[]' }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'internal/api/**'
              - 'cmd/api/**'
              - 'Dockerfile.api'
            portal:
              - 'internal/portal/**'
              - 'cmd/portal/**'
              - 'Dockerfile.portal'
              - 'templates/**'
              - 'static/**'

  build-and-push:
    needs: changes
    if: needs.changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.changes.outputs.services) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ matrix.service }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:latest

  rollout:
    needs: [changes, build-and-push]
    if: needs.changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Rollout deployments
        run: |
          for service in ${{ join(fromJson(needs.changes.outputs.services), ' ') }}; do
            kubectl rollout restart deployment/medisynth-${service} -n medisynth-io
          done 