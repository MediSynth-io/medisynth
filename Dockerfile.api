# Use Go 1.23 for the build stage
FROM golang:1.23 AS builder
WORKDIR /app
COPY . .

# Download and tidy dependencies
RUN go mod tidy && go mod download

# Build the application
RUN CGO_ENABLED=1 go build -o /app/medisynth-api ./cmd/api/main.go

# Use a debian-based image for the final stage
FROM debian:bullseye-slim
WORKDIR /app

# Install required system packages
RUN apt-get update && apt-get install -y \
    ca-certificates \
    openjdk-17-jre \
    curl \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install Synthea
RUN curl -L https://github.com/synthetichealth/synthea/releases/download/master-branch-latest/synthea-with-dependencies.jar -o /app/synthea.jar

# Create a wrapper script for Synthea
RUN echo '#!/bin/bash\njava -jar /app/synthea.jar run_synthea "$@"' > /app/synthea && \
    chmod +x /app/synthea

# Add Synthea to PATH
ENV PATH="/app:${PATH}"

# Copy the API binary
COPY --from=builder /app/medisynth-api /app/medisynth-api

# Copy any other necessary files
COPY --from=builder /app/config /app/config
COPY --from=builder /app/migrations /app/migrations

# Create directory for Synthea output
RUN mkdir -p /tmp/synthea-output && chmod 777 /tmp/synthea-output

# Set environment variables
ENV PORT=8081

# Expose the port
EXPOSE 8081

CMD ["/app/medisynth-api"] 