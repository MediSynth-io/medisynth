apiVersion: apps/v1
kind: Deployment
metadata:
  name: medisynth-api
  namespace: medisynth-io
spec:
  replicas: 1
  selector:
    matchLabels:
      app: medisynth-api
  template:
    metadata:
      labels:
        app: medisynth-api
    spec:
      imagePullSecrets:
        - name: ghcr-login-secret
      securityContext:
        fsGroup: 1000
      containers:
        - name: medisynth-api
          image: ghcr.io/medisynth-io/medisynth-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
              name: http
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "2048Mi"
              cpu: "5000m"
          livenessProbe:
            httpGet:
              path: /heartbeat
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /heartbeat
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: sqlite-data
              mountPath: /data
          envFrom:
            - configMapRef:
                name: medisynth-api-config
            - secretRef:
                name: medisynth-secrets
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      initContainers:
        - name: init-db
          image: alpine:latest
          command: 
            - sh
            - -c
            - |
              echo "Setting up database directory and permissions..."
              
              # Create the data directory if it doesn't exist
              mkdir -p /data
              
              # Set proper ownership and permissions
              chown -R 1000:1000 /data
              chmod -R 755 /data
              
              # Create the database file if it doesn't exist
              if [ ! -f /data/medisynth.db ]; then
                echo "Creating database file..."
                touch /data/medisynth.db
                chown 1000:1000 /data/medisynth.db
                chmod 644 /data/medisynth.db
              fi
              
              # Verify permissions
              ls -la /data/
              echo "Database initialization complete"
          volumeMounts:
            - name: sqlite-data
              mountPath: /data
          securityContext:
            runAsUser: 0
      volumes:
        - name: sqlite-data
          persistentVolumeClaim:
            claimName: medisynth-sqlite-pvc