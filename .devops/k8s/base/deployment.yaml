apiVersion: apps/v1
kind: Deployment
metadata:
  name: medisynth-api
  namespace: medisynth-io
  labels:
    app: medisynth-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: medisynth-api
  template:
    metadata:
      labels:
        app: medisynth-api
    spec:
      imagePullSecrets:
      - name: ghcr-login-secret
      containers:
      - name: medisynth-api
        image: ghcr.io/medisynth-io/medisynth:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          name: http
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /heartbeat
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /heartbeat
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: sqlite-data
          mountPath: /data
        - name: config
          mountPath: /app/config
        env:
        - name: CONFIG_DIR
          value: /app/config
      - name: sqlite
        image: nouchka/sqlite3:latest
        command: ["sh", "-c", "touch /data/sqlite/medisynth.db && chmod 666 /data/sqlite/medisynth.db && while true; do sleep 3600; done"]
        ports:
        - containerPort: 8082
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: sqlite-data
          mountPath: /data
          subPath: sqlite
        env:
        - name: SQLITE_DATABASE
          value: medisynth.db
        - name: SQLITE_SOCKET_PATH
          value: /data/sqlite.sock
        - name: SQLITE_WAL_MODE
          value: "true"
      initContainers:
      - name: init-chown-data
        image: busybox
        command: ["sh", "-c", "mkdir -p /data/sqlite && chown -R 1000:1000 /data"]
        volumeMounts:
        - name: sqlite-data
          mountPath: /data
      volumes:
      - name: sqlite-data
        persistentVolumeClaim:
          claimName: medisynth-sqlite-pvc
      - name: config
        configMap:
          name: medisynth-config